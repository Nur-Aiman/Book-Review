<!DOCTYPE html>
<html>
  <head>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <title>Book Review - <%= bookData.BookName %></title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/css/bootstrap.min.css"
      integrity="sha512-cgRv30chI+kb1YJYKgTnTJsmRjWpX00rxZ6V+L6cxbv7VWqcnbOy7Vat0+j+O5H5hjXzgPJ2LZKrO5BvE5WJjw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <style>
      body {
        padding-top: 100px;
        background-color: whitesmoke;
      }

      .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        transition: 0.3s;
        width: 30%;
        border-radius: 25px;
      }

      .card .card-img-top {
        width: 70%;
        height: 500px;
        margin: auto;
      }

      .card:hover {
        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
      }

      img {
        border-radius: 5px 5px 0 0;
      }

      .card-body {
        padding: 20px 16px;
      }

      .card-title {
        font-size: 34px;
        color: black;
      }

      .card-author {
        font-size: 24px;
        color: black;
        font-style: italic;
      }

      #bookCards {
        text-align: center;
        /*border: 2px solid black;*/
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .card {
        display: inline-block;
        text-align: center;
        vertical-align: top;
        height: 700px;
        max-width: 523.42px;
        margin: 0 150px 20px 0;
      }

      .card-deck:not(:last-child) .card {
        flex: 1 0 auto;
      }

      .navbar {
        background-color: indigo;
      }

      .mt-3 {
        /*border: 2px solid red;*/
        width: 2000px;
      }

      .form-inline {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
      }
    </style>
  </head>

  <body>
    <div>
      <nav class="navbar fixed-top d-flex">
        <a href="/api/books/addBook"
          ><button class="btn btn-dark ml-auto">Add Book Review</button></a
        >

        <a class="navbar-brand ml-auto" style="color: wheat">Book Review</a>
        <div class="ml-auto">
          <div class="dropdown">
            <button
              class="btn btn-dark dropdown-toggle"
              type="button"
              id="dropdownMenuButton"
              data-toggle="dropdown"
              aria-haspopup="true"
              aria-expanded="false"
            >
              <%= userEmail %>
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
              <a class="dropdown-item" href="/api/users/logout">Logout</a>
            </div>
          </div>
        </div>
      </nav>
    </div>

    <div class="container-fluid mt-3">
      <h1 style="text-align: center">Book Review</h1>
      <div style="text-align: center">
        <form>
          <label class="mr-sm-2" for="sortDropdown">Sort By:</label>
          <select
            class="mr-sm-2"
            id="sortDropdown"
            onchange="sortBooks(this.value)"
          >
            <option value="default">Default</option>
            <option value="asc">Ascending</option>
            <option value="desc">Descending</option>
          </select>
        </form>
      </div>

      <hr />
      <div class="row" id="bookCards">
        <% for (var i = 0; i < bookData.length; i+=3) { %>
        <div class="col-md-10 mb-4">
          <div class="card-deck">
            <% for (var j = i; j < i+3 && j < bookData.length; j++) { %>
            <div class="card">
              <a href="/api/books/<%= bookData[j].id %>">
                <img
                  class="card-img-top"
                  src="<%= bookData[j].image %>"
                  alt="<%= bookData[j].title %>"
                />
                <div class="card-body">
                  <h5 class="card-title"><%= bookData[j].title %></h5>
                  <h5 class="card-author">~<%= bookData[j].author %></h5>
                </div>
              </a>
            </div>
            <% } %>
          </div>
        </div>
        <% } %>
      </div>
    </div>
    <script>
      let defaultOrder = Array.from(
        document.querySelectorAll('#bookCards > .col-md-10')
      ).map((row) => row.cloneNode(true))

      function sortBooks(order) {
        let bookCards = document.querySelectorAll('.card')
        let bookArray = Array.from(bookCards)
        let bookCardContainer = document.querySelector('#bookCards')

        if (order === 'asc' || order === 'desc') {
          if (order === 'asc') {
            bookArray.sort((a, b) => {
              let aTitle = a
                .querySelector('.card-title')
                .textContent.toLowerCase()
              let bTitle = b
                .querySelector('.card-title')
                .textContent.toLowerCase()
              return aTitle.localeCompare(bTitle)
            })
          } else {
            bookArray.sort((a, b) => {
              let aTitle = a
                .querySelector('.card-title')
                .textContent.toLowerCase()
              let bTitle = b
                .querySelector('.card-title')
                .textContent.toLowerCase()
              return bTitle.localeCompare(aTitle)
            })
          }

          bookCardContainer.innerHTML = ''

          let cardDeck
          bookArray.forEach((bookCard, index) => {
            if (index % 3 === 0) {
              let newRow = document.createElement('div')
              newRow.classList.add('col-md-10', 'mb-4')
              cardDeck = document.createElement('div')
              cardDeck.classList.add('card-deck')
              newRow.appendChild(cardDeck)
              bookCardContainer.appendChild(newRow)
            }
            cardDeck.appendChild(bookCard.closest('.card'))
          })
        } else {
          // Restore the default order
          bookCardContainer.innerHTML = ''

          defaultOrder.forEach((row) => {
            let newRow = row.cloneNode(true)
            bookCardContainer.appendChild(newRow)
          })
        }
      }
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
      integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+ZvvELbQNOQvF6GHMg8UJwJwN5KfOI"
      crossorigin="anonymous"
    ></script>

    <script></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  </body>
</html>
